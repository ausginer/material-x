@use 'sass:meta';
@use '../core/processor/css-var';
@use '../core/utils/map';

@function -create-var($acc, $name, $-index, $-list, $tokens, $prefix: null) {
  $value: map.get($tokens, $name);

  @if $value == null {
    @return $acc;
  }

  @if $prefix != null {
    @return map.set($acc, $name, css-var.create-public($name, $prefix, $value));
  }

  @return map.set($acc, $name, css-var.create-private($name, $value));
}
$-create-vars-reducer: meta.get-function('-create-var');

/// Creates CSS variable definitions for the given tokens.
///
/// @param {Map<String, Any>} $tokens - The map of tokens to create variables
/// for.
/// @param {String} $prefix - The prefix to use for public CSS variables.
/// @param {List<String>} $public-vars - The list of token names to create
/// public CSS variables for.
/// @param {List<String>} $private-vars - The list of token names to create
/// private CSS variables for.
/// @returns {Map<String, CSSVariable>} - The map of created CSS variable
/// definitions.
@function create($tokens, $prefix, $public-vars, $private-vars) {
  $private: list.reduce($private-vars, $-create-vars-reducer, $tokens);
  $public: list.reduce($public-vars, $-create-vars-reducer, $tokens, $prefix);

  @return map.merge($public, $private);
}
