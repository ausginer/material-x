@use 'sass:meta';
@use 'sass:string';
@use '~@sass-fairy/list/list';
@use '~@fireflysemantics/sass-logger' as logger;
@use '../../core/utils/map';

@mixin vars($map) {
  @each $key, $value in $map {
    --_#{$key}: #{$value};
  }
}

@function filter-nulls($map) {
  $result: ();

  @each $key, $value in $map {
    @if $value != null {
      $result: map.set($result, $key, $value);
    }
  }

  @return $result;
}

@function -is-unique($item, $-index, $-list, $key, $value) {
  @return $value != map.get($item, $key);
}

@function pick-unique($map, $maps-to-compare...) {
  $result: ();

  @each $key, $value in $map {
    @if list.every(
      $maps-to-compare,
      meta.get-function('-is-unique'),
      $key,
      $value
    )
    {
      $result: map.set($result, $key, $value);
    }
  }

  @return $result;
}

@function append-public-prefix($map, $prefix) {
  $result: ();

  @each $key, $value in $map {
    $result: map.set($result, $key, 'var(--#{$prefix}-#{$key}, #{$value})');
  }

  @return $result;
}
