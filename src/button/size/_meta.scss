@use 'sass:meta';
@use '../../core/tokens/md-comp-button' as default-tokens;
@use '../../core/tokens/md-comp-button-xlarge' as xlarge-tokens;
@use '../../core/tokens/md-comp-button-large' as large-tokens;
@use '../../core/tokens/md-comp-button-medium' as medium-tokens;
@use '../../core/tokens/md-comp-button-small' as small-tokens;
@use '../../core/tokens/md-comp-button-xsmall' as xsmall-tokens;
@use '../../core/utils/map';
@use '../default/meta' as default;
@use '../utils' as *;
@use '../vars' as *;

@function -map-unselected($key, $value, $-map, $size, $extensions) {
  @return (
    $key,
    state-vars(
      extend($value, $extensions...),
      'md-#{$size}-button-unselected-#{$key}'
    )
  );
}
$-map-unselected: meta.get-function('-map-unselected');

@function -map-selected($key, $value, $-map, $size, $unselected) {
  @return (
    $key,
    state-vars(
      extend($value, map.get($unselected, $key) or ()),
      'md-#{$size}-button-selected-#{$key}'
    )
  );
}
$-map-selected: meta.get-function('-map-selected');

@function -process-sizes($size, $value, $-void...) {
  $groups: group-buttons($value);

  $default-tokens: map.get($groups, 'default');
  $default: state-vars(
    extend($default-tokens, default.$default-tokens),
    'md-#{$size}-button'
  );

  $extensions: ($default-tokens, default.$default-tokens);

  $unselected: map.map(
    map.get($groups, 'unselected') or (),
    $-map-unselected,
    $size,
    $extensions
  );

  @return (
    $size,
    (
      'default': $default,
      'hovered': state-vars(
          extend(map.get($groups, 'hovered') or (), $extensions...),
          'md-#{$size}-button-hovered'
        ),
      'focused': state-vars(
          extend(map.get($groups, 'focused') or (), $extensions...),
          'md-#{$size}-button-focused'
        ),
      'pressed': state-vars(
          extend(map.get($groups, 'pressed') or (), $extensions...),
          'md-#{$size}-button-pressed'
        ),
      'unselected': $unselected,
      'selected': map.map(
          map.get($groups, 'selected') or (),
          $-map-selected,
          $size,
          $unselected
        )
    )
  );
}

$sizes: map.map(
  (
    'xlarge': xlarge-tokens.$map,
    'large': large-tokens.$map,
    'medium': medium-tokens.$map,
    'small': small-tokens.$map,
    'xsmall': xsmall-tokens.$map,
  ),
  meta.get-function('-process-sizes')
);
