@use 'sass:meta';
@use '~@sass-fairy/list/list';
@use '../../core/tokens/md-comp-button';
@use '../../core/defaults/motion-effects';
@use '../../core/utils/map';
@use '../utils' as *;
@use '../vars' as *;

$-groups: group-buttons(md-comp-button.$map);

$default-tokens: map.get($-groups, 'default');

$special: (
  'container-shape-default': var(--_container-shape-round),
  'container-shape-pressed': var(--_container-shape-square),
  'state-layer-opacity': map.get($-groups, 'pressed', 'state-layer-opacity'),
  'state-layer-color': map.get($-groups, 'pressed', 'state-layer-color'),
  'padding-block': calc(
      (
          var(--_container-height) - max(
              var(--_icon-size),
              var(--_label-text-line-height)
            )
        ) /
        2
    ),
  'press-damping': map.get(
      $-groups,
      'pressed',
      'container-corner-size-motion-spring-damping'
    ),
  'press-stiffness': map.get(
      $-groups,
      'pressed',
      'container-corner-size-motion-spring-stiffness'
    ),
  'press-duration': motion-effects.$expressive-fast-effects-duration,
  'ripple-color': var(--_state-layer-color),
  'ripple-easing': motion-effects.$expressive-fast-effects,
  'ripple-opacity': var(--_state-layer-opacity),
  'press-factor': 0,
);

$default: map.merge(state-vars($default-tokens, 'md-button'), $special);

$-extensions: ($default-tokens, $special);

$hovered: state-vars(
  extend(map.get($-groups, 'hovered'), $-extensions...),
  'md-button-hovered'
);

$focused: state-vars(
  extend(map.get($-groups, 'focused'), $-extensions...),
  'md-button-focused'
);

$pressed: state-vars(
  extend(map.get($-groups, 'pressed'), $-extensions...),
  'md-button-pressed'
);

$disabled: state-vars(
  extend(map.get($-groups, 'disabled'), $-extensions...),
  'md-button-disabled'
);

@function -map-unselected($key, $value, $-void...) {
  @return (
    $key,
    state-vars(extend($value, $-extensions...), 'md-button-unselected-#{$key}')
  );
}

$unselected: map.deep-merge(
  map.map(
    map.get($-groups, 'unselected') or (),
    meta.get-function('-map-unselected')
  ),
  (
    'default': (
      'switch-easing': motion-effects.$expressive-fast-effects,
      'switch-duration': 500ms,
    ),
  )
);

@function -map-selected($key, $value, $-void...) {
  @return (
    $key,
    state-vars(
      extend($value, map.get($unselected, $key) or ()),
      'md-button-selected-#{$key}'
    )
  );
}

$selected: map.map(
  map.get($-groups, 'selected') or (),
  meta.get-function('-map-selected')
);
