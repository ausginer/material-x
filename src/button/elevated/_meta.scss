@use 'sass:meta';
@use 'sass:string';
@use '../../core/tokens/md-comp-button-elevated';
@use '../../core/utils/map';
@use '../default/meta' as default;
@use '../../core/utils/functions' as *;
@use '../utils' as *;
@use '../vars' as *;

$color: 'elevated';

$-groups: group-buttons(md-comp-button-elevated.$map);

$default: pick-unique(map.get($-groups, 'default'), default.$default);
$special: (
  'level': var(--_container-elevation),
);

$hovered: pick-unique(map.get($-groups, 'hovered'), $default, default.$default);

$focused: pick-unique(map.get($-groups, 'focused'), $default, default.$default);

$pressed: pick-unique(map.get($-groups, 'pressed'), $default, default.$default);

@function -map-special-state-vars($key, $value, $-void...) {
  @return ($key, pick-unique($value, $default, default.$default));
}
$-map-special-state-vars-callback: meta.get-function('-map-special-state-vars');

$unselected: map.map(
  map.get($-groups, 'unselected') or (),
  $-map-special-state-vars-callback
);

$selected: map.map(
  map.get($-groups, 'selected') or (),
  $-map-special-state-vars-callback
);
